<?xml version="1.0"?>
<project
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
		xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.softdev.system</groupId>
		<artifactId>SpringBootCodeGenerator</artifactId>
		<version>3.0</version>
	</parent>

	<artifactId>generator-web</artifactId>
	<version>3.0</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.prefix>xianyu</docker.image.prefix>
	</properties>

	<dependencies>


		<!-- https://mvnrepository.com/artifact/com.sun.mail/javax.mail -->
		<!--<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.6.1</version>
		</dependency>-->


		<!-- spring-data-jpa -->
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>-->

		<!--<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>-->

	</dependencies>


	<build>
		<!--解决idea打包没有xml-->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<skip>true</skip>
					<compilerId>javac</compilerId>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<compilerVersion>1.8</compilerVersion>
					<verbose>true</verbose>
					<optimize>true</optimize>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.plexus</groupId>
						<artifactId>plexus-compiler-eclipse</artifactId>
						<version>2.2</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<!--<failOnMissingWebXml>false</failOnMissingWebXml>-->
					<includeEmptyDirs>true</includeEmptyDirs>
				</configuration>
			</plugin>
			<!--<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.3</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<warSourceExcludes>upload/**</warSourceExcludes>
				</configuration>
			</plugin>-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--docker-maven-plugin插件打包-->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.2.0</version>
				<configuration>
					<!--镜像名称-->
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<!--指定标签-->
					<imageTags>
						<imageTag>latest</imageTag>
					</imageTags>
					<!--基础镜像jdk1.8-->
					<baseImage>java</baseImage>
					<!--制作者提供本人信息-->
					<maintainer>dt@email.com</maintainer>

					<dockerCertPath>${project.basedir}/src/main/resources/pem</dockerCertPath>


					<!--切换到Root目录-->
					<workdir>/ROOT</workdir>
					<cmd>["java", "-version"]</cmd>
					<entryPoint>["java", "-jar", "${project.build.finalName}.jar"]</entryPoint>

					<!--指定DockerFile路径-->
					<!--<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>-->

					<!--指定远程docker api地址-->
					<dockerHost>https://139.9.40.88:2376</dockerHost>

					<!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
					<resources>
						<resource>
							<targetPath>/ROOT</targetPath>
							<!--用于指定需要复制的根目录-->
							<directory>${project.build.directory}</directory>
							<!--用于指定需要复制的jar文件-->
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>

		</plugins>

	</build>
	<repositories>
		<!-- 192.168.0.201远程仓库 -->
		<repository>
			<id>nexus-aliyun</id>
			<name>Nexus aliyun</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
